{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\trici\\\\OneDrive\\\\Desktop\\\\pharmline\\\\pharmlineproj\\\\src\\\\components\\\\Events\\\\UpcomingEvents.js\";\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { Link } from \"react-router-dom\";\nimport upcomingEvents from '../../data/upcomingEvents.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UpcomingEvents() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: \"This is some text within a card body.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = UpcomingEvents;\nexport default UpcomingEvents;\nvar _c;\n$RefreshReg$(_c, \"UpcomingEvents\");","map":{"version":3,"names":["Card","Col","Row","Link","upcomingEvents","jsxDEV","_jsxDEV","Fragment","_Fragment","UpcomingEvents","children","Body","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/trici/OneDrive/Desktop/pharmline/pharmlineproj/src/components/Events/UpcomingEvents.js"],"sourcesContent":["import Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport upcomingEvents from '../../data/upcomingEvents.json';\r\n\r\nfunction UpcomingEvents() {\r\n\r\n    return(\r\n        <>\r\n            {/* <Row xs={1} md={2} className=\"g-4\">\r\n                {upcomingEvents.map((event, idx) => (\r\n                    <Col key={idx}>\r\n                        <Link to=\"/\">\r\n                            <Card className=\"event-card\">\r\n                                <Card.Img variant=\"top\" src={event.image} />\r\n                                <Card.Body>\r\n                                <span className=\"copyright\">{event.date}</span>\r\n                                <Card.Title>{event.name}</Card.Title>\r\n                                <Card.Text>\r\n                                    {event.date}\r\n                                    {event.time}\r\n                                    {event.location}\r\n                                </Card.Text>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Link>\r\n                    </Col>\r\n                ))}\r\n            </Row> */}\r\n\r\n        {/* <Card style={{ width: '18rem' }}>\r\n            <Card.Img variant=\"botrom\" src=\"holder.js/100px180\" />\r\n            <Card.Body>\r\n                <Card.Title>Card Title</Card.Title>\r\n                <Card.Text>\r\n                Some quick example text to build on the card title and make up the\r\n                bulk of the card's content.\r\n                </Card.Text>\r\n                <Button variant=\"primary\">Go somewhere</Button>\r\n            </Card.Body>\r\n            </Card> */}\r\n\r\n            <Card>\r\n            <Card.Body>This is some text within a card body.</Card.Body>\r\n          </Card>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UpcomingEvents;"],"mappings":";AAAA,OAAOA,IAAI,MAAM,sBAAsB;AACvC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,OAAOC,cAAc,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5D,SAASC,cAAcA,CAAA,EAAG;EAEtB,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eAkCIJ,OAAA,CAACN,IAAI;MAAAU,QAAA,eACLJ,OAAA,CAACN,IAAI,CAACW,IAAI;QAAAD,QAAA,EAAC;MAAqC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD;EAAC,gBAEP,CAAC;AAEX;AAACC,EAAA,GA3CQP,cAAc;AA6CvB,eAAeA,cAAc;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}