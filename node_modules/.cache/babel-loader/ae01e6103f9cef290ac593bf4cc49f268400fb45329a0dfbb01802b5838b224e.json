{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\trici\\\\OneDrive\\\\Desktop\\\\pharmline\\\\pharmlineproj\\\\src\\\\components\\\\ScrollButton.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { ArrowUpCircleFill } from 'react-bootstrap-icons';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScrollButton = () => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n  const prevScrollPos = useRef(0);\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    const toggleVisibility = () => {\n      const currentScrollPos = window.pageYOffset;\n\n      // Button is displayed after scrolling for 500 pixels\n      if (currentScrollPos > 500 && currentScrollPos > prevScrollPos.current) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n      prevScrollPos.current = currentScrollPos;\n    };\n    window.addEventListener(\"scroll\", toggleVisibility);\n    return () => window.removeEventListener(\"scroll\", toggleVisibility);\n  }, [isVisible]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"backToTop\",\n    children: isVisible && /*#__PURE__*/_jsxDEV(Link, {\n      onClick: scrollToTop,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"red-txt\",\n        children: /*#__PURE__*/_jsxDEV(ArrowUpCircleFill, {\n          size: \"40\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ScrollButton, \"FGU0deU/4fF5RL7L77P2iW0+Mr4=\");\n_c = ScrollButton;\nexport default ScrollButton;\nvar _c;\n$RefreshReg$(_c, \"ScrollButton\");","map":{"version":3,"names":["useState","useEffect","useRef","ArrowUpCircleFill","Button","Link","jsxDEV","_jsxDEV","ScrollButton","_s","isVisible","setIsVisible","prevScrollPos","scrollToTop","window","scrollTo","top","behavior","toggleVisibility","currentScrollPos","pageYOffset","current","addEventListener","removeEventListener","className","children","onClick","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/trici/OneDrive/Desktop/pharmline/pharmlineproj/src/components/ScrollButton.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport { ArrowUpCircleFill } from 'react-bootstrap-icons'; \r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link } from \"react-router-dom\";\r\n  \r\nconst ScrollButton = () =>{ \r\n  \r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const prevScrollPos = useRef(0);\r\n\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\"\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const toggleVisibility = () => {\r\n      const currentScrollPos = window.pageYOffset;\r\n\r\n      // Button is displayed after scrolling for 500 pixels\r\n      if (currentScrollPos > 500 && currentScrollPos > prevScrollPos.current) {\r\n        setIsVisible(true);\r\n      } else {\r\n        setIsVisible(false);\r\n      }\r\n\r\n      prevScrollPos.current = currentScrollPos;\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", toggleVisibility);\r\n\r\n    return () => window.removeEventListener(\"scroll\", toggleVisibility);\r\n  }, [isVisible]);\r\n  \r\n  return ( \r\n\r\n\r\n    <div className=\"backToTop\">\r\n      {isVisible && (\r\n        <Link onClick={scrollToTop}>\r\n        <span className=\"red-txt\"><ArrowUpCircleFill size=\"40\"/></span>\r\n      </Link>\r\n      )}\r\n    </div>\r\n\r\n  ); \r\n} \r\n  \r\nexport default ScrollButton; "],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,iBAAiB,QAAQ,uBAAuB;AACzD,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAA,KAAK;EAAAC,EAAA;EAExB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMY,aAAa,GAAGV,MAAM,CAAC,CAAC,CAAC;EAE/B,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACxBC,MAAM,CAACC,QAAQ,CAAC;MACdC,GAAG,EAAE,CAAC;MACNC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACd,MAAMiB,gBAAgB,GAAGA,CAAA,KAAM;MAC7B,MAAMC,gBAAgB,GAAGL,MAAM,CAACM,WAAW;;MAE3C;MACA,IAAID,gBAAgB,GAAG,GAAG,IAAIA,gBAAgB,GAAGP,aAAa,CAACS,OAAO,EAAE;QACtEV,YAAY,CAAC,IAAI,CAAC;MACpB,CAAC,MAAM;QACLA,YAAY,CAAC,KAAK,CAAC;MACrB;MAEAC,aAAa,CAACS,OAAO,GAAGF,gBAAgB;IAC1C,CAAC;IAEDL,MAAM,CAACQ,gBAAgB,CAAC,QAAQ,EAAEJ,gBAAgB,CAAC;IAEnD,OAAO,MAAMJ,MAAM,CAACS,mBAAmB,CAAC,QAAQ,EAAEL,gBAAgB,CAAC;EACrE,CAAC,EAAE,CAACR,SAAS,CAAC,CAAC;EAEf,oBAGEH,OAAA;IAAKiB,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBf,SAAS,iBACRH,OAAA,CAACF,IAAI;MAACqB,OAAO,EAAEb,WAAY;MAAAY,QAAA,eAC3BlB,OAAA;QAAMiB,SAAS,EAAC,SAAS;QAAAC,QAAA,eAAClB,OAAA,CAACJ,iBAAiB;UAACwB,IAAI,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAGV,CAAC;AAAAtB,EAAA,CA3CKD,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AA6ClB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}